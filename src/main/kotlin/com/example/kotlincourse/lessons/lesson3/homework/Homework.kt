package com.example.kotlincourse.lessons.lesson3.homework


//1. Название мероприятия (неизменяемая публичная переменная, известная на момент написания)
val name: String = "Hackathon Survival"

//2. Дата проведения (публичная переменная, известная на момент написания, но может быть изменена из-за переноса даты проведения)
var date: String = "20 сентября 2025"

//3. Место проведения (неизменяемая публичная переменная, известная на момент написания)
var location: String = "Стамбул"

//4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы (приватная неизменяемая переменная - её не должны увидеть и бюджет уже запланирован и утверждён и не должен изменяться)
private val budgetFull: String = "подробная информация с перечислением поставщиков и сумм, для внутреннего пользования"

//5. Количество участников (публичная изменяемая переменная, станет известна к концу мероприятия)
var members: Int = 0

//6. Длительность хакатона (неизменяемая публичная переменная, известная на момент написания)
val hackathonDays: Int = 5

//7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг (неизменяемая приватная переменная, известная на момент написания).
private val suppliersContact: String = "Поставщик: тел. 123-45-67, hackaton@mail.ru, условия..."

//8. Текущее состояние хакатона (статус), (изменяемая публичная переменная, известная на момент написания)
var statusOn: String = "Not started"

//9. Список спонсоров (изменяемая публичная переменная, известная на момент написания)
var sponsors: String = "Спонсор: 222-22-22 sponsor@mail.ru"

//10. Бюджет мероприятия (приватная неизменяемая переменная - её не должны увидеть, бюджет уже утверждён и не меняется)
private val budget: Int = 1000000

//11. Текущий уровень доступа к интернету (изменяемая публичная переменная, известная на момент написания)
var internetOn: String = "On"

//12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки (неизменяемая приватная переменная, известная на момент написания)
private val instructions: String = "Доставка оборудования, подготовка помещения, управление командой"

//13. Количество команд (неизменяемая публичная переменная, известная на момент написания)
var numberOfTeams: Int = 0

//14. Перечень задач (неизменяемая публичная переменная, известная на момент написания)
val tasksList: String = "1. Планирование" + "2. Согласование" + "3. Проведение" + "4. Отчетность"

//15. План эвакуации (неизменяемая публичная переменная, известная на момент написания)
var evacuationPlan: String = "План эвакуации"

//16. Список доступного оборудования (всё, что выделено для использования на мероприятии), (изменяемая публичная переменная, известная на момент написания)
val equipmentsList: String = "Компьютер, проектор, аудиоусилитель, колонки, микрофон"

//17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками), (изменяемая публичная переменная, известная на момент написания)
var equipmentsFree: String = "Компьютер, проектор, аудиоусилитель, колонки, микрофон"

//18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала), (публичная изменяемая переменная с отложенной инициализацией, так как на момент создания поставщик и график не известны)
lateinit var mealSchedule: String

//19. План мероприятий на случай сбоев (неизменяемая публичная переменная, известная на момент написания)
val emergency: String = "Перенос даты"

//20. Список экспертов и жюри (изменяемая публичная переменная, известная на момент написания)
var juryList: String = "1... 2..."

//21. Политика конфиденциальности (неизменяемая публичная переменная, известная на момент написания)
val privacyPolicy: String = "Политика конфиденциальности"

//22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем (изменяемая приватная переменная, неизвестная на момент написания)
private lateinit var lazyFeedback: String

//23. Текущая температура в помещении
var temperatureIndoor: Int = 22

//24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
var monitoringNetwork: String = ""
    get() = field
    set(value) {
        if (value == "Все работает") field = "Хорошо}"
        else field = "Не работает"
    }

//25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
private var SpeedOfInternet: Double = 0.5

//26. Уровень освещения
var lumensLevl: Int = 800

//27. Лог событий мероприятия
private var log: String = "лог событий мероприятия"

//28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
val ambulance: Boolean = true

//29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
private var safety: String = "Куда эвакуироваться" + evacuationPlan

//30. Регистрационный номер мероприятия
val nomber: Int = 233

//31. Максимально допустимый уровень шума в помещении хакатона.
val noiseLevelMax: Int = 40

//32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
var noiseLevelCurrent: Int = 25
var isNoiseTooHigh: Boolean = noiseLevelCurrent > noiseLevelMax

//33. План взаимодействия с прессой
val contactsWithPress: String = "Комментарии"

//34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
var projectOne: String = "Работает"
var projectTwo: String = "Работает"
var projectThree: String = "Работает"
var informationAboutProjects: String = projectOne + projectTwo + projectThree

//35. Статус получения всех необходимых разрешений для проведения мероприятия
var permissions: Boolean = true

//36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
var freeAccessSpecEquipment: Boolean = true

//37. Список партнеров мероприятия
var partnersList: String = "Партнер №1: т. 111-11-11, Партнер №2: т. 222-22-22, Партнер №3: т. 333-33-33"
    private set

//38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
val awardsList: String by lazy {
    ""
}

//39. Внутренние правила распределения призов
private val relesOfAward: String = "Супер, Хорошие, Молодцы"

//40. Список разыгрываемых призов
val prizes: String = "Призы"

//41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
val emergencyСontacts: String = "тел 911"

//42. Особые условия для участников с ограниченными возможностями
val SpecialFeatures: String = "пандус и лифт"

//43. Общее настроение участников (определяется опросами)
var moodFroze: String = ""

//44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
val hackathonPlan: String by lazy {
    "план"
}

//45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
lateinit var specialGuest: String

//46. Максимальное количество людей, которое может вместить место проведения.
val guestsMaximum: Int = 100

//47. Количество часов, отведенное каждой команде для работы над проектом.
var timeProject: Int = 6

