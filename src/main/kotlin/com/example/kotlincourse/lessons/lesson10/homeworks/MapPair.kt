package com.example.kotlincourse.lessons.lesson10.homeworks

fun main() {
//    Задачи на работу со словарём
//    1. Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
    val map1 = mapOf<Int, Int>()

//    2. Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double
    val map2 = mapOf<Float, Double>(1.0f to 10.0, 2.0f to 20.0)

//    3. Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
    val map3 = mutableMapOf<Int, String>(1 to "One", 2 to "Two")

//    4. Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
    map3[3] = "Three"
    map3[4] = "Four"

//    5. Используя словарь из предыдущего задания, извлеките значение, используя ключ. Попробуй получить значение с ключом, которого в словаре нет.
    val value1 = map3[1] // существует, выдает "One"
    val value2 = map3[5] // не существует, выдает "null"
//    println(map3[1]) - можно так распечатать
//    println(map3[5])

//    6. Удалите определенный элемент из изменяемого словаря по его ключу.
    map3.remove(4)

//    7. Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение. Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
    val map7 = mapOf<Double, Int>(1.0 to 0, 2.0 to 4, 3.0 to 9, 4.0 to 16)
    for ((key,value) in map7) {
        if (value == 0) {
            println("Бесконечность")
        } else println(key / value)
    }

//    8. Измените значение для существующего ключа в изменяемом словаре.
    map3[3] = "Thirty three"

//    9. Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
    val map91 = mapOf<Int, String>(1 to "Aa", 2 to "Bb")
    val map92 = mapOf<Int, String>(3 to "Cc", 4 to "Dd", 5 to "Ee")
    val totalMap = mutableMapOf<Int, String>()
    for ((key, value) in map91) {
        totalMap[key] = value
    }
    for ((key, value) in map92) {
        totalMap[key] = value
    }
    println(totalMap)

//    10. Создайте словарь, где ключами являются строки, а значениями - списки целых чисел. Добавьте несколько элементов в этот словарь.
    val map10 = mutableMapOf<String, List<Int>>()
    map10["Moscow"] = listOf<Int>(1, 2, 3)
    map10["St.Petersburg"] = listOf(4, 5)
    println(map10)

//    11. Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк. Добавь данные в словарь. Получи значение по ключу (это должно быть множество строк) и добавь в это множество ещё строку. Распечатай полученное множество.
    val map11 = mutableMapOf<Int, MutableList<String>>()
    map11[1] = mutableListOf<String>("One", "Two", "Three")
    map11[2] = mutableListOf<String>("Four", "Five")
    val value11 = map11[2]
    map11[2]?.add("Six")
    println(map11)

//    12. Создай словарь, где ключами будут пары чисел. Через перебор найди значение у которого пара будет содержать цифру 5 в качестве первого или второго значения.
    val map12 = mapOf<Int, Int>(1 to 5, 3 to 6, 5 to 7)
    for ((key, value) in map12) {
        if (key == 5 || value == 5) {
            println("$key, $value - эта пара содержит 5")
        } else {
            println("$key, $value - эта пара не содержит 5")
        }
    }


//    Задачи на подбор оптимального типа для словаря
//    1. Словарь библиотека: Ключи - автор книги, значения - список книг
    val map = mutableMapOf<String, MutableList<String>>()

//    2. Справочник растений: Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений
    val map = mapOf<String, List<String>>()

//    3. Четвертьфинала: Ключи - названия спортивных команд, значения - списки игроков каждой команды
    val map = mapOf<String, MutableList<String>>()

//    4. Курс лечения: Ключи - даты, значения - список препаратов принимаемых в дату
    val map = mapOf<String, List<String>>()

//    5. Словарь путешественника: Ключи - страны, значения - словари из городов со списком интересных мест.
    val map = mapOf<String, Map<String, List<String>>>()

}